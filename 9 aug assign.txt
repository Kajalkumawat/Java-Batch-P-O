aggregation in abstraction :
file A
class College :abstract 
	abstract methods : 
	course()
	department()
	details()

class People ex College 

file B
class Main access
--------------------------------------------
file A
class Mahindra :abstract method 
	tyre 
	break1
	mirror
	horn 
	gate

class Paranchi ex Mahindra 

file B
class Main :access 
--------------------------------------------
file A
class Company 
	abstract methods : 
	workprofiler()
	department()
	details()

class Employe ex Company 


class Mangager ex company 

file B
class Main class :access  
--------------------------------------------
file A
class Mall 
	shop
	bar
	cafe
	restaurant
	games 

class Person ex Mall

class Child ex Person

class SeniorCitizen ex Child 

file B
class Main :main method access	

--------------------------------------------
------------------------------------------------------
file A
class College :abstract 
	abstract methods : 
	course()
	department() non abstract 
	details() non abstract 


class People ex College 

file B
class Main access

--------------------------------------------
file A
class Mahindra :abstract method 
	tyre 
	break1
	mirror nonabstract 
	horn non abstract 
	gate non abstract 

class Paranchi ex Mahindra 

file B
class Main :access 
--------------------------------------------
file A
class Company 
	abstract methods : 
	workprofiler() non abstract 
	department()
	details()

class Employe ex Company 


class Mangager ex company 

file B
class Main class :access  
--------------------------------------------
file A
class Mall 
	shop
	bar
	cafe non abstract 
	restaurant non abstract 
	games 

class Person ex Mall

class Child ex Person

class SeniorCitizen ex Child 

file B
class Main :main method access	
--------------------------------------------
file A
class Mall 
	shop
	bar
	cafe non abstract 
	restaurant non abstract 
	games 

file B
class Person ex Mall
adharcard() 
	detail :name 

file C
class Child  Person
pan chard() :details 

file D
class SeniorCitizen   Child 
rashancard()

file E
class Main :main method access	

--------------------------------------------
file A
class A :abstract 
	method :no return and no argument 

class B :ex A 

file B
class Main main :access 
--------------------------------------------
file A
class A :abstract 
	method :no return and  argument 

class B :ex A 

file B

class Main main :access 

--------------------------------------------
file A
class A :abstract 
	method : return and no argument 

class B :ex A 

file B
class Main main :access 
--------------------------------------------
file A
class A :abstract 
	method : return and  argument 

class B :ex A 

file B
class Main main :access 
--------------------------------------------
file A
class A :abstract 
	method :covariant return type 

class B :ex A 

file B
class Main main :access 

--------------------------------------------
file A
class A :abstract 
		method overloading 

class B :ex A 

file B
class Main main :access 

--------------------------------------------
file A

class A :abstract 
		method overrding :non abstract overrding possible  

class B :ex A 

file B
class Main main :access 

--------------------------------------------
file A
class A :abstract 
		method overrding :non abstract overrding possible  

class B :ex A 

file B
class Main main :access 

problem solve 
--------------------------------------------
file A
abstract class A 
	abstract method 
	non-abstract method 

class B ex A 
		single level inheritance 
		object through child class constructor 
file B
class Main:
main method 
-------------------------------------------------------
file A
abstract class A 
	abstract method 
	non-abstract method 

class B ex A 
		multilevel inheritance 
		object through child class constructor 
file B
class Main:
main method 
-------------------------------------------------------
file A
abstract class A 
	abstract method 
	non-abstract method 

class B ex A 
		heirarichal level inheritance 
		object through child class constructor 
file B
class Main:
main method 
-------------------------------------------------------
abstract class A 
	abstract method 
	non-abstract method 

abstract class B
	abstract method 
	non-abstract method 

abstract class C
	abstract method 
	non-abstract method 

file A
class H ex B

file B
class D ex C

file C
class E ex A

file D
class F ex H

file E
class G ex C

file F
Main class 
main method : call all child class through child class constructor 

--------------------------------------------------
file A
abstract class A
	abstract method : no return and no argument 

file B
class Main :
main method :anonymous inner class 

--------------------------------------------------
file A
abstract class A
	abstract method : no return and  argument 

file B
class Main :
main method :anonymous inner class 

--------------------------------------------------
file A
abstract class A
	abstract method :  return and no argument 

file B
class Main :
main method :anonymous inner class 

--------------------------------------------------
file A
abstract class A
	abstract method :  return and  argument 

file B
class Main :
main method :anonymous inner class 
---------------------------------------

--------------------------------------------------
file A
abstract class A
	abstract method : covariant return type 

file B
class Main :
main method :anonymous inner class 
--------------------------------------------------
file A
abstract class A
	non abstract method : return and  argument 
	abstract method : return and no argument 
	non abstract method :no return and  argument 
	abstract method :no return and no argument 
	non abstract method : covariant

class B ex A 
return and argument 
constructor :parameterised 

file B
class Main :
main method :anonymous inner class 
	child k through abstraction call 
	child k constructor through abstraction call 

--------------------------------------------------
file A
abstract class A
	non abstract method : return and  argument 
	abstract method : return and no argument 
	non abstract method :no return and  argument 
	abstract method :no return and no argument 
	non abstract method : covariant

file B
class B 
anonymous inner class  

file C
class Main :
main method :
--------------------------------------------------
file A
abstract class A
	non abstract method : return and  argument 
	abstract method : return and no argument 
	non abstract method :no return and  argument 
	abstract method :no return and no argument 
	non abstract method : covariant

class B ex A 
anonymous inner class  

file B
class Main :
main method :
access 
--------------------------------------------------
file A
interface A 
	method : no return and no argument 
	method : no return and  argument 
	method :  return and no argument 
	method :  return and  argument 

class B -->access interface 

file B
class Main :make object 
---------------------------------------------------------------------
file A
interface A 
	method : no return and no argument 

interface B
	method : no return and  argument 

interface C
	method :  return and no argument 

interface D 
	method :  return and  argument 

class E -->access interface 

file B
class Main :make object 
---------------------------------------------------------------------
through extends 

file A
interface A 
	method : no return and no argument 

interface B
	method : no return and  argument 

interface C
	method :  return and no argument 

interface D 
	method :  return and  argument 

class E -->access interface 

file A
class Main :make object 
---------------------------------------------------------------------
file A
interface A 
	method : no return and no argument 
		interface B
			method : no return and  argument 
		interface C
			method :  return and no argument 

		interface D 
			method :  return and  argument 


class E -->access interface 

file A
class Main :make object 

---------------------------------------------------------------------
file A
interface A 
	method : no return and no argument 
		interface B
			method : no return and  argument 
			interface C
			  method :  return and no argument 
					interface D 
			      		method :  return and  argument 
		


class E -->access interface 

file B
class Main :make object 

---------------------------------------------------------------------
file A
interface 
	class A
		method1 

class B -->method1 

file B
class Main :B k through A ki property access krni hey 
------------------------------------------------------------------
file A
interface 
	class A
		method1 :no return and argument 
		method2: return and argument 
		method3: return and no argument 
		method4 :covariant return type 

class B -->method1 

file B
class Main :B k through A ki property access krni hey 
----------------------------------------------
file A
interface 
	class A
		method1 :no return and argument 
	class B1
		method2: return and argument 
	class C
		method3: return and no argument 
	class D
		method4 :covariant return type 

class B -->method1 

file B
class Main :B k through A ki property access krni hey 
all classes access the proeprties 
------------------------------------------------------------------
file A
interface 
	method2 :return and argument 
	class A
		method1 

class B -->method1 

file B
class Main :B k through A ki property access krni hey 

------------------------------------------------------------------
file A
class A
	interface C
		method1 :no return and no argument 
		method2:no return and  argument 
		method3:return and no argument 
		method4 : return and  argument 

class B access A

file B
Main class 
main method :access B k through  
------------------------------------------------------------------
file A
class A
	interface C
		method1 :no return and no argument 
	interface D
		method2:no return and  argument 
	interface E
		method3:return and no argument 
	interface F
		method4 : return and  argument 

class B access A

file B
Main class 
main method :access B k through  
------------------------------------------------------------------
file A
class
	class 
		method

file B
acess 

------------------------------------------------------------------
file A
interface 
	class 
	interface 
file B
access 
------------------------------------------------------------------
file A
class
	interface
	class 
file B
access 
------------------------------------------------------------------
file A
interface A
	interface B
		interface C 

	class D

file B		class E
access 

------------------------------------------------------------------
file A
class A
	interface B---A
		interface C

	class D---A 
		class E
file B
access 
------------------------------------------------------------------
file A
anonymous inner class 

interface A 
	method : no return and no argument 

interface B
	method : no return and  argument 

interface C
	method :  return and no argument 

interface D 
	method :  return and  argument 

file B
class Main : anonymous inner class 
------------------------------------------------------------------
file A
class A

interface B

class C both acces A and B 

file B
Main class access 
------------------------------------------------------------------
file A
class A

interface B

interface C

interface D 

class C both acces A and B and C and D  

file B
Main class access 
------------------------------------------------------------------
file A
class A 
	interface F

interface B
	class K

file B
class C both access 
------------------------------------------------------------------
file A
interface 
	method :define no return and no argument 

another class 
->return and argument :method 

file B
Main :main method access
--------------------------------------------------------------------
file A
interface 
	method :define no return and  argument 

another class 
->return and no argument :method 

file B
Main :main method access
--------------------------------------------------------------------
file A
interface 
	method :define  return and no argument 

another class 
->no return and argument :method 

file B
Main :main method access
--------------------------------------------------------------------
file A
interface 
	method :define  return and  argument 

another class 
->no return and no argument :method 

file B
Main :main method access
--------------------------------------------------------------------
file A
interface A
	method1 :non-abs :println( "A interface method non-abstract") 
	method2 :abs
	interface B
				method3 :abs
				method4 :non-abs
		interface C
					method5 :abs
					method6:non abs

	interface D
		method7 :abs
		method8 :non abs

	class E
		method9
		class F
		 method10
	interface G
		method11: abs
		method12: non abs

		class H
			method 13
		       method 14
file B
all method access 
-----------------------------------------------------------------------------------------
file A
interface A 
	method : no return and no argument 

interface B
	method : no return and  argument 

interface C
	method :  return and no argument 

interface D 
	method :  return and  argument 

class E -->access interface 

file B
class Main :make object 
child k through access
---------------------------------------------------------








